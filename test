#!/bin/bash

LIMIT_DATE=$(date -d '1 days ago' +%Y-%m-%d)
LOG_DIR="/opt/t24/tafjbatch/log"

for server in $(cat hosts); do
  ssh -q "$server" '
    LIMIT_DATE='"$LIMIT_DATE"'
    LOG_DIR='"$LOG_DIR"'

    for f in ${LOG_DIR}/*.log; do
      awk -v limit="$LIMIT_DATE" -v file="$f" '
      /\[ERROR\]/ && length($0) <= 600 {
          log_date = $2
          if (log_date >= limit) {
              if ($0 ~ /DATABASE|RUNTIME|EJB|MDB/) {
                  match($0, /\} *(.*)/, arr)
                  if (arr[1] != "" && arr[1] != "\"") {
                      key = arr[1]
                      print key "|" "[" file "] " $0
                  }
              }
          }
      }' "$f"
    done
  ' 
done | sort -t'|' -k1,1 -u | cut -d'|' -f2-








#!/bin/bash

LIMIT_DATE=$(date -d '7 days ago' +%Y-%m-%d)

for f in *.log; do
  awk -v limit="$LIMIT_DATE" -v file="$f" '
  /\[ERROR\]/ && length($0) <= 100 {
      log_date = $2
      if (log_date >= limit) {
          if ($0 ~ /DATABASE|RUNTIME|EJB|MDB/) {
              match($0, /\} *(.*)/, arr)
              if (arr[1] != "") {
                  key = arr[1]
                  print key "|" "[" file "] " $0
              }
          }
      }
  }' "$f"
done | sort -t'|' -k1,1 -u | cut -d'|' -f2-







#!/bin/bash

LIMIT_DATE=$(date -d '7 days ago' +%Y-%m-%d)

for f in *.log; do
  awk -v limit="$LIMIT_DATE" -v file="$f" '
  /\[ERROR\]/ && length($0) <= 100 {
      log_date = $2
      if (log_date >= limit) {
          if ($0 ~ /DATABASE|RUNTIME|EJB|MDB/) {
              match($0, /\} *(.*)/, arr)
              if (arr[1] != "") {
                  key = arr[1]
                  print key "|||___LINE___|||[" file "] " $0
              }
          }
      }
  }' "$f"
done | sort -u -t'|||___LINE___|||' -k1,1 | cut -d'|||___LINE___|||' -f2




for f in *.log; do
  awk -v limit="$(date -d '7 days ago' +%Y-%m-%d)" '
  /\[ERROR\]/ && length($0) <= 100 {
      date_str = $2
      if (date_str >= limit) print FILENAME ": " $0
  }' "$f"
done



awk -v limit="$(date -d '7 days ago' +%Y-%m-%dT%H:%M:%S)" '
$0 ~ /^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}/ && 
/ERROR/ && 
length($0) <= 100 {
    gsub(",", "", $2); # премахва ,111 от часа
    ts = $1 "T" $2;
    if (ts >= limit) print
}' файл.log




<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>PDF Export Example</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
  <style>
    body { font-family: Arial; padding: 20px; }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 30px;
    }
    th, td {
      border: 1px solid #333;
      padding: 6px 10px;
      font-size: 12px;
    }
    canvas {
      max-width: 100%;
      margin-bottom: 40px;
    }
    @media print {
      .pagebreak {
        page-break-before: always;
      }
    }
  </style>
</head>
<body>

<button onclick="exportToPDF()" style="margin-bottom: 20px;">Export Full Page to PDF</button>

<div id="exportArea">
  <h2>Sample Report</h2>

  <!-- Table -->
  <table>
    <thead>
      <tr>
        <th>Date</th>
        <th>COB Elapsed</th>
        <th>RR Elapsed</th>
      </tr>
    </thead>
    <tbody>
      <tr><td>2025-03-01</td><td>01:30:00</td><td>00:45:00</td></tr>
      <tr><td>2025-03-02</td><td>01:45:00</td><td>01:15:00</td></tr>
      <tr><td>2025-03-03</td><td>02:00:00</td><td>00:50:00</td></tr>
    </tbody>
  </table>

  <!-- Chart -->
  <canvas id="sampleChart" width="800" height="300"></canvas>

  <div class="pagebreak"></div>

  <!-- More content if needed -->
  <h3>Summary</h3>
  <p>This report was generated to show performance across multiple days...</p>
</div>

<script>
function exportToPDF() {
  const element = document.getElementById('exportArea');
  const opt = {
    margin: [0.5, 0.5, 0.5, 0.5],
    filename: 'report-export.pdf',
    image: { type: 'jpeg', quality: 1 },
    html2canvas: { scale: 3, useCORS: true, scrollX: 0, scrollY: 0 },
    jsPDF: { unit: 'in', format: 'a4', orientation: 'portrait' },
    pagebreak: { mode: ['css', 'legacy'] }
  };
  html2pdf().set(opt).from(element).save();
}

// Simple bar chart
window.onload = function () {
  const ctx = document.getElementById('sampleChart').getContext('2d');
  new Chart(ctx, {
    type: 'bar',
    data: {
      labels: ['2025-03-01', '2025-03-02', '2025-03-03'],
      datasets: [{
        label: 'COB Elapsed (
min)',
        data: [90, 105, 120],
        backgroundColor: 'orange'
      }]
    },
    options: {




awk -v limit="$(date -d '7 days ago' +%Y-%m-%d)" '/ERROR/ && $0 ~ /^[0-9]{4}-[0-9]{2}-[0-9]{2}/ && substr($0, 1, 10) >= limit && length($0) <= 100' файл.log
      responsive: false,
      scales: {
        y: { beginAtZero: true }
      }
    }
  });
};
</script>

</body>
</html>
